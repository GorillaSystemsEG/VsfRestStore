<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.1.xsd"
        standalone="true" require-authentication="anonymous-view" allow-extra-path="true">

    <always-actions>
        <!-- TODO: make this configurable, perhaps through a productStoreGroupId constant instead of productStoreId constant -->
        <set field="productStoreId" value="POPC_DEFAULT"/>
        <entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"/>
        <set field="wikiSpaceId" from="productStore?.wikiSpaceId"/>
    </always-actions>

    <transition name="config.js" read-only="true">
        <actions>
            <script><![CDATA[
                // set productStoreId in the session
                ec.web.sessionAttributes.productStoreId = productStoreId
                // get store info
                Map storeInfo = ec.service.sync().name("popstore.StoreServices.get#StoreInfo").parameter("productStoreId", productStoreId).call()
                // add apiKey and moquiSessionToken for current user and session
                if (ec.user.username) { try { storeInfo.apiKey = ec.user.getLoginKey() } catch (Exception e) { } }
                else storeInfo.apiKey = null
                storeInfo.moquiSessionToken = ec.web.sessionToken
                String partyId = (ec.user.username ? ec.user.userAccount?.partyId : null) ?: ec.web.sessionAttributes.customerPartyId
                if (partyId) { storeInfo.customerInfo = ec.service.sync().name("popstore.CustomerServices.get#CustomerInfo").call() }
                // generate and send the JS response
                String storeInfoJson = groovy.json.JsonOutput.toJson(storeInfo)
                String jsText = """
var storeInfo = ${storeInfoJson};
\$.extend(storeConfig, storeInfo.productStore, storeInfo.settings);
"""
                ec.web.sendTextResponse(jsText, "application/javascript", null)
            ]]></script>
        </actions>
        <default-response type="none"/>
    </transition>

    <subscreens default-item="home" always-use-full-path="true"/>
    <subscreens default-item="product" always-use-full-path="true"/>

    <widgets>
        <render-mode><text type="html" location="component://PopRestStore/template/store/root.html.ftl"/></render-mode>
    </widgets>
</screen>
