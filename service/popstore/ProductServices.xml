<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="get" noun="ProductInfo">
        <in-parameters>
            <parameter name="productId" required="true"/>
            <parameter name="productStoreId"/>
            <parameter name="priceUomId"/>
            <parameter name="locale"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters entity-name="mantle.product.Product" include="nonpk"/>

            <parameter name="price" type="BigDecimal"/>
            <parameter name="listPrice" type="BigDecimal"/>
            <parameter name="priceUomId"/>

            <parameter name="productClassDescription"/>
            <parameter name="descriptionLong"/>
            <parameter name="contentList" type="List"><parameter name="content" type="Map">
                <parameter name="productContentId"/><parameter name="productContentTypeEnumId"/>
                <parameter name="description"/><parameter name="sequenceNum"/>
            </parameter></parameter>

            <parameter name="standardFeatureList" type="List"><parameter name="dimension" type="Map"/></parameter>
            <parameter name="dimensionList" type="List"><parameter name="dimension" type="Map"/></parameter>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.product.Product" value-field="product"/>
            <if condition="product == null"><return error="true" message="Product not found with ID ${productId}"/></if>
            <script>context.putAll(product)</script>

            <if condition="productStoreId">
                <entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore"/>
                <if condition="!priceUomId"><set field="priceUomId" from="productStore?.defaultCurrencyUomId"/></if>
                <set field="vendorPartyId" from="productStore?.organizationPartyId"/>
            </if>
            <set field="customerPartyId" from="ec.user.userAccount?.partyId"/>
            <service-call name="mantle.product.PriceServices.get#ProductPrice" out-map="priceMap"
                    in-map="[productId:productId, priceUomId:priceUomId, productStoreId:productStoreId,
                    vendorPartyId:vendorPartyId, customerPartyId:customerPartyId]"/>
            <set field="price" from="priceMap.price"/>
            <set field="listPrice" from="priceMap.listPrice"/>
            <set field="priceUomId" from="priceMap.priceUomId"/>

            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="productClassEnum">
                <field-map field-name="enumId" from="product.productClassEnumId"/></entity-find-one>
            <set field="productClassDescription" from="productClassEnum.description"/>

            <entity-find entity-name="mantle.product.feature.ProductFeatureAndAppl" list="standardFeatureList" cache="true">
                <date-filter/><econdition field-name="productId"/>
                <econdition field-name="applTypeEnumId" value="PfatStandard"/>
                <order-by field-name="productFeatureTypeEnumId"/><order-by field-name="description"/>
            </entity-find>

            <entity-find entity-name="mantle.product.ProductDimensionAndType" list="dimensionList" cache="true">
                <econdition field-name="productId"/><order-by field-name="description"/></entity-find>

            <entity-find entity-name="mantle.product.ProductContent" list="contentList" cache="true">
                <date-filter/><econdition field-name="productId"/>
                <order-by field-name="sequenceNum,-fromDate"/>
            </entity-find>
            <if condition="locale">
                <!-- filter after by locale to streamline cached find -->
                <set field="langLocale" from="locale.contains('_') ? locale.substring(locale.indexOf('_')) : null"/>
                <set field="contentList" from="contentList.findAll({ it.locale == null || it.locale == locale || it.locale == langLocale })"/>
            </if>
            <!-- some content types may have more than one record, long description just has one -->
            <set field="descLongLocation" from="contentList.find({ 'PcntDescriptionLong' == it.productContentTypeEnumId })?.contentLocation"/>
            <if condition="descLongLocation"><set field="descriptionLong" from="ec.resource.getLocationText(descLongLocation, true)"/></if>
            <!-- <set field="imageSmallList" from="contentList.findAll({ 'PcntImageSmall' == it.productContentTypeEnumId })"/> -->
        </actions>
    </service>

    <service verb="search" noun="Products">
        <in-parameters>
            <parameter name="term"/>
            <parameter name="productCategoryId"/>
            <parameter name="productFeatureIds" type="List"><parameter name="productFeatureId"/></parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="products" type="List"><parameter name="productInfo" type="Map">

            </parameter></parameter>
        </out-parameters>
        <actions>
            <!-- TODO -->
        </actions>
    </service>

    <service verb="get" noun="CategoryProducts">
        <in-parameters>
            <parameter name="productCategoryId" required="true"/>
            <parameter name="productStoreId"/>
            <parameter name="priceUomId"/>
            <parameter name="locale"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters entity-name="mantle.product.category.ProductCategory" include="nonpk"/>

            <parameter name="productList" type="List"><parameter name="productInfo" type="Map">
                <parameter name="productId"/><parameter name="productName"/><parameter name="description"/>
                <parameter name="price" type="BigDecimal"/><parameter name="listPrice" type="BigDecimal"/><parameter name="priceUomId"/>
                <parameter name="smallImageList" type="List"><parameter name="smallImage" type="Map">
                    <parameter name="productContentId"/><parameter name="productContentTypeEnumId"/>
                    <parameter name="description"/><parameter name="sequenceNum"/>
                </parameter></parameter>
            </parameter></parameter>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.product.category.ProductCategory" value-field="productCategory" cache="true"/>
            <if condition="productCategory == null"><return error="true" message="Category not found with ID ${productCategoryId}"/></if>
            <script>context.putAll(productCategory)</script>

            <if condition="productStoreId">
                <entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"/>
                <if condition="!priceUomId"><set field="priceUomId" from="productStore?.defaultCurrencyUomId"/></if>
                <set field="vendorPartyId" from="productStore?.organizationPartyId"/>
            </if>
            <set field="customerPartyId" from="ec.user.userAccount?.partyId"/>

            <!-- TODO: change to plain cached ProductCategoryMember query, separate cached query for Product for cache size efficiency -->
            <!-- TODO: support pagination parameters in (pageIndex, pageSize, etc) and out (...) -->
            <entity-find entity-name="ProductCategoryMemberProduct" list="pcmpList" cache="true">
                <date-filter/><econdition field-name="productCategoryId"/>
                <order-by field-name="sequenceNum"/><order-by field-name="productName"/>
            </entity-find>
            <set field="productList" from="[]"/>
            <iterate list="pcmpList" entry="pcmp">
                <service-call name="mantle.product.PriceServices.get#ProductPrice" out-map="priceMap"
                        in-map="[productId:pcmp.productId, priceUomId:priceUomId, productStoreId:productStoreId,
                                vendorPartyId:vendorPartyId, customerPartyId:customerPartyId]"/>

                <entity-find entity-name="mantle.product.ProductContent" list="smallImageList" cache="true">
                    <date-filter/><econdition field-name="productId" from="pcmp.productId"/>
                    <econdition field-name="productContentTypeEnumId" value="PcntImageSmall"/>
                    <order-by field-name="sequenceNum,-fromDate"/>
                </entity-find>
                <if condition="locale">
                    <!-- filter after by locale to streamline cached find -->
                    <set field="langLocale" from="locale.contains('_') ? locale.substring(locale.indexOf('_')) : null"/>
                    <set field="smallImageList" from="smallImageList.findAll({ it.locale == null || it.locale == locale || it.locale == langLocale })"/>
                </if>

                <script>productList.add([productId:pcmp.productId, productName:pcmp.productName, description:pcmp.description,
                        price:priceMap.price, listPrice:priceMap.listPrice, priceUomId:priceMap.priceUomId,
                        smallImageList:smallImageList])</script>
            </iterate>
        </actions>
    </service>
</services>
